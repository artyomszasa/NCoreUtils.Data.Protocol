<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net7.0</TargetFramework>
    <Nullable>enable</Nullable>
    <IsPackable>false</IsPackable>
    <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="7.0.0" />
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="16.11.0" />
    <PackageReference Include="xunit" Version="2.4.1" />
    <PackageReference Include="xunit.runner.visualstudio" Version="2.4.3">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="coverlet.collector" Version="3.1.0">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\NCoreUtils.Data.Protocol.Portable.Generator\NCoreUtils.Data.Protocol.Portable.Generator.csproj" PrivateAssets="all" ReferenceOutputAssembly="false" OutputItemType="Analyzer" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\NCoreUtils.Data.Protocol\NCoreUtils.Data.Protocol.csproj" />
    <ProjectReference Include="..\NCoreUtils.Data.Protocol.Linq.DependencyInjection\NCoreUtils.Data.Protocol.Linq.DependencyInjection.csproj" />
    <ProjectReference Include="..\NCoreUtils.Data.Protocol.Portable\NCoreUtils.Data.Protocol.Portable.csproj" />
    <ProjectReference Include="..\NCoreUtils.Data.Protocol.Reflection\NCoreUtils.Data.Protocol.Reflection.csproj" />
  </ItemGroup>
  <!-- **** -->
  <ItemGroup>
    <PackageReference Include="ReportGenerator" Version="5.0.2">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
    <PackageReference Include="coverlet.msbuild" Version="3.1.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
  </ItemGroup>
  <Target Name="BeforeRunCoverageTests">
    <PropertyGroup>
      <CollectCoverage>true</CollectCoverage>
      <CoverletOutputFormat>opencover</CoverletOutputFormat>
      <CoverletOutput>$([System.IO.Path]::Combine($(MSBuildProjectDirectory), "coverage.opencover.xml"))</CoverletOutput>
      <Threshold>0</Threshold>
      <ThresholdType>line</ThresholdType>
      <ThresholdStat>total</ThresholdStat>
    </PropertyGroup>
  </Target>
  <Target Name="GenerateReport">
    <Message Text="Generating report for $(CoverletOutput)" Importance="high" />
    <ReportGenerator ReportFiles="$(CoverletOutput)" TargetDirectory="report" ReportTypes="Html" VerbosityLevel="Verbose" />
  </Target>
  <Target Name="RunCoverageTests" DependsOnTargets="BeforeRunCoverageTests">
    <CallTarget Targets="VSTest" />
    <MSBuild Projects="$(MSBuildProjectFile)" Targets="GenerateReport" Properties="TargetFramework=$(TargetFramework);CoverletOutput=$(CoverletOutput)" />
  </Target>
</Project>
