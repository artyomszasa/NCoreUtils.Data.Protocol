<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.0</TargetFramework>

    <IsPackable>false</IsPackable>
    <DebugType>portable</DebugType>
    <GenerateProgramFile>false</GenerateProgramFile>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="DataQueryParserTests.fs" />
    <Compile Include="DataQueryExpressionBuilderTests.fs" />
    <Compile Include="QueryTests.fs" />
    <Compile Include="Program.fs" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="coverlet.msbuild" Version="2.6.0" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="3.0.0-preview7.19305.4" />
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="16.0.1" />
    <PackageReference Include="xunit" Version="2.4.0" />
    <PackageReference Include="xunit.runner.visualstudio" Version="2.4.0" />
    <PackageReference Include="ReportGenerator" Version="4.1.4" PrivateAssets="All" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\NCoreUtils.Data.Protocol\NCoreUtils.Data.Protocol.fsproj" />
    <ProjectReference Include="..\NCoreUtils.Data.Protocol.Linq\NCoreUtils.Data.Protocol.Linq.csproj" />
  </ItemGroup>

  <!-- WORKAROUND -->
  <Target Name="WorkaroundNetStandard" AfterTargets="ResolvePackageAssets">
    <ItemGroup>
      <TransitiveFrameworkReference Remove="NETStandard.Library" />
    </ItemGroup>
  </Target>
  <!-- /WORKAROUND -->

  <Target Name="RunCoverageTests">
    <PropertyGroup>
      <ReportGeneratorPaths>$([System.IO.Directory]::GetFiles($(NuGetPackageRoot), "ReportGenerator.exe", System.IO.SearchOption.AllDirectories))</ReportGeneratorPaths>
    </PropertyGroup>
    <ItemGroup>
      <ReportGeneratorVersion Include="%(PackageReference.Version)" Condition="%(PackageReference.Identity) == 'ReportGenerator'" />
    </ItemGroup>
    <PropertyGroup>
      <UseReportGeneratorVersion>@(ReportGeneratorVersion)</UseReportGeneratorVersion>
    </PropertyGroup>
    <ItemGroup>
      <ReportGeneratorCandidates Include="$(ReportGeneratorPaths)" />
      <ReportGeneratorPath Include="%(ReportGeneratorCandidates.Identity)" Condition="$([System.String]::new('%(ReportGeneratorCandidates.Identity)').Contains($(UseReportGeneratorVersion)))" />
    </ItemGroup>
    <PropertyGroup>
      <UseReportGeneratorPath>@(ReportGeneratorPath)</UseReportGeneratorPath>
    </PropertyGroup>
    <Message Importance="High" Text="Version = @(ReportGeneratorVersion)" />
    <Message Importance="High" Text="Candidates = %(ReportGeneratorCandidates.Identity)" />
    <Message Importance="High" Text="Chosen path = $(UseReportGeneratorPath)" />
    <PropertyGroup>
      <CollectCoverage>True</CollectCoverage>
      <CoverletOutputFormat>opencover</CoverletOutputFormat>
    </PropertyGroup>
    <!-- msbuild not integrated this yet...
    <CallTarget Targets="VSTest" />
    -->
    <Exec Command="dotnet test --no-restore /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:Include=&quot;[NCoreUtils.Data.Protocol*]*&quot; /p:Exclude=&quot;[NCoreUtils.Data.Protocol.Unit]*&quot;" />
    <Exec Command="mono $(UseReportGeneratorPath) -reports:coverage.opencover.xml -targetdir:report -reporttypes:Html" Condition="'$(OS)' == 'Unix'" />
    <Exec Command="$(UseReportGeneratorPath) -reports:coverage.opencover.xml -targetdir:report -reporttypes:Html" Condition="'$(OS)' != 'Unix'" />
  </Target>


</Project>
